<!DOCTYPE html>
<html>
  <head>
    <title>Bethel</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/dashboard.css">
    <link rel="stylesheet" href="/styles/datepicker.css">
    <link rel="stylesheet" href="/styles/font-awesome.css">
    <link rel="stylesheet" href="/styles/jquery.fileupload.css">
    <link rel="stylesheet" href="/styles/locations.css">
    <link rel="stylesheet" href="/styles/podcasts.css">
    <link rel="stylesheet" href="/styles/theme.css">
    <!--STYLES END-->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
    <script src="//maps.googleapis.com/maps/api/js?libraries=places&amp;key=AIzaSyCasoNnO-7ZHrH_NBcCU_BBed6duq8NvJg&amp;sensor=false"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
  </head>

  <body<% if (req.url === '/login' || req.url === '/register' || req.url === '/welcome') { %> class="welcome"<% } %>>
    <% if (session.authenticated && req.url != '/welcome') { %>
    <nav class="navbar navbar-inverse" role="navigation">
      <div class="container-fluid">
        <div class="navbar-header">
          <a class="navbar-brand" href="/">Bethel</a>
        </div>
        <ul class="nav navbar-nav">
          <li id="menu-icon"><a id="nav-toggle" class="menu-icon" href="#"><i class="fa fa-bars"></i></a></li>
        </ul>
        <% if (session.User.name) { %>
          <ul class="nav navbar-nav navbar-right">
            <% if (session.Ministry) { %>
            <li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown"><%= session.Ministry.name %></a>
              <ul class="dropdown-menu">
                <li><a href="/locations">Locations</a></li>
              </ul>
            </li>
            <% } %>
          <li class="dropdown">
            <a href="#" class="dropdown-toggle avatar" data-toggle="dropdown"><img class="avatar" src="<%= session.User.avatar %>" /></a>
            <ul class="dropdown-menu">
              <li><a href="#">My Account</a></li>
              <li class="divider"></li>
              <li><a href="/logout">Logout</a></li>
            </ul>
          </li>
        </ul>
        <% } %>
      </div>
    </nav>

    <nav role="navigation">
      <ul id="main-menu" class="nav nav-pills nav-stacked nav-main">
        <li<% if (req.url === '/') { %> class="active"<% } %>><a href="/"><i class="fa fa-tachometer"></i>Dashboard</a></li>
        <li<% if (req.url === '/podcasts' || req.url.split('/')[1] == 'podcast') { %> class="active"<% } %>><a href="/podcasts"><i class="fa fa-microphone"></i>Podcasts</a></li>
        <li><a href="/"><i class="fa fa-mobile"></i>Mobile App</a></li>
        <li><a href="/"><i class="fa fa-users" ></i>Volunteers</a></li>
        <li><a href="/"><i class="fa fa-video-camera"></i>Live Streaming</a></li>
        <li><a href="/"><i class="fa fa-money"></i>Giving</a></li>
        <li><a href="/"><i class="fa fa-thumbs-up"></i>Social Media</a></li>
      </ul>
      <ul class="nav nav-pills nav-stacked nav-main nav-bottom">
        <li><a href="https://mybethel.uservoice.com/" target="_blank"><i class="fa fa-comments-o"></i>Feedback</a></li>
      </ul>
    </nav>

    <section class="page-wrap">
    <% } %>

    <%- body %>

    <% if (session.authenticated && req.url != '/welcome') { %>
    </section>
    <% } %>

    <div id="popover" class="modal fade">

    </div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/socket.io.js"></script>
    <script src="/js/sails.io.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/jquery.fileupload.js"></script>
    <script src="/js/jquery.form.js"></script>
    <script src="/js/jquery.iframe-transport.js"></script>
    <script src="/js/jquery.sparkline.js"></script>
    <script src="/js/jquery.typeahead.js"></script>
    <script src="/js/jquery.validate.js"></script>
    <script src="/js/bootstrap-datepicker.js"></script>
    <script src="/js/bootstrap.js"></script>
    <script src="/js/podcast.js"></script>
    <script src="/js/ui.js"></script>
    <script src="/js/user-validate.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
